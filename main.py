import discord
from discord.ext import commands
from discord import app_commands
from myserver import server_on
import json
import os

intents = discord.Intents.all()
bot = commands.Bot(command_prefix="!", intents=intents)
bot.user_bag = {}
bot.user_team = {}

item_emojis = {
    "Pokeball": "<:emoji_4:1361942448514797570>",
    "Revive": "<:emoji_3:1361905327741603890>"
}

item_choices = [
    app_commands.Choice(name="Pokeball", value="Pokeball"),
    app_commands.Choice(name="Revive", value="Revive"),
]

def save_data():
    with open("bag_data.json", "w") as f:
        json.dump(bot.user_bag, f)
    with open("team_data.json", "w") as f:
        json.dump(bot.user_team, f)

def load_data():
    if os.path.exists("bag_data.json"):
        with open("bag_data.json", "r") as f:
            bot.user_bag = json.load(f)
    if os.path.exists("team_data.json"):
        with open("team_data.json", "r") as f:
            bot.user_team = json.load(f)

@bot.event
async def on_ready():
    load_data()
    print("Bot online!")
    await bot.tree.sync()
    print("Command tree synced!")

@bot.tree.command(name="ping", description="Pong!")
async def ping(interaction: discord.Interaction):
    await interaction.response.send_message("Pong!")

@bot.tree.command(name="additem", description="‡πÄ‡∏û‡∏¥‡πà‡∏° item ‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)")
@app_commands.describe(user="‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡∏≠‡∏á", item="‡∏ä‡∏∑‡πà‡∏≠‡∏Ç‡∏≠‡∏á", amount="‡∏à‡∏≥‡∏ô‡∏ß‡∏ô")
@app_commands.choices(item=item_choices)
async def additem(interaction: discord.Interaction, user: discord.User, item: app_commands.Choice[str], amount: int):
    if not any(role.name == "Admin" for role in interaction.user.roles):
        await interaction.response.send_message(
            embed=discord.Embed(description="‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", color=discord.Color.red()),
            ephemeral=True
        )
        return

    user_id = str(user.id)
    item_name = item.value
    emoji = item_emojis.get(item_name, "")

    if user_id not in bot.user_bag:
        bot.user_bag[user_id] = {}

    if item_name in bot.user_bag[user_id]:
        bot.user_bag[user_id][item_name] += amount
    else:
        bot.user_bag[user_id][item_name] = amount

    await interaction.response.send_message(
        embed=discord.Embed(
            description=f"‡πÄ‡∏û‡∏¥‡πà‡∏° {emoji} **{item_name}** ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô **{amount}** ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö {user.mention}",
            color=discord.Color.green()
        )
    )
    save_data()

@bot.tree.command(name="bag", description="‡∏î‡∏π‡∏Ç‡∏≠‡∏á‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤")
async def bag(interaction: discord.Interaction):
    user_id = str(interaction.user.id)
    bag = bot.user_bag.get(user_id, {})

    if not bag:
        await interaction.response.send_message(
            embed=discord.Embed(description="‡πÑ‡∏°‡πà‡∏°‡∏µ item ‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤", color=discord.Color.orange()),
            ephemeral=True
        )
        return

    bag_items = "\n".join([
        f"{item_emojis.get(item, '')} ‚Ä¢ **{item}** √ó {amount}"
        for item, amount in bag.items()
    ])

    await interaction.response.send_message(
        embed=discord.Embed(
            title=f"{interaction.user.name}'s Bag üéí",
            description=bag_items,
            color=discord.Color.blue()
        )
    )

@bot.tree.command(name="unlock", description="‡∏à‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡∏∞‡∏ä‡∏∑‡πà‡∏≠‡∏î‡πâ‡∏ß‡∏¢ Pokeball")
@app_commands.describe(number="‡πÄ‡∏•‡∏Ç‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡πà‡∏≠‡∏ô", name="‡∏ä‡∏∑‡πà‡∏≠‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡πà‡∏≠‡∏ô")
async def unlock(interaction: discord.Interaction, number: int, name: str):
    user_id = str(interaction.user.id)
    bag = bot.user_bag.get(user_id, {})

    if bag.get("Pokeball", 0) < 1:
        await interaction.response.send_message(
            embed=discord.Embed(description="‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ Pokeball ‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤!", color=discord.Color.red()),
            ephemeral=True
        )
        return

    bot.user_bag[user_id]["Pokeball"] -= 1

    if user_id not in bot.user_team:
        bot.user_team[user_id] = []

    bot.user_team[user_id].append((number, name, False))

    await interaction.response.send_message(
        embed=discord.Embed(
            description=f"‡πÄ‡∏û‡∏¥‡πà‡∏° **{number}** ‡∏ä‡∏∑‡πà‡∏≠ **{name}** ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢! (-1 Pokeball)",
            color=discord.Color.green()
        )
    )
    save_data()

@bot.tree.command(name="team", description="‡∏î‡∏π‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡∏ó‡∏µ‡∏°")
async def team(interaction: discord.Interaction):
    user_id = str(interaction.user.id)
    team = bot.user_team.get(user_id, [])

    if not team:
        await interaction.response.send_message(
            embed=discord.Embed(description="‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡πà‡∏≠‡∏ô‡πÉ‡∏ô‡∏ó‡∏µ‡∏°‡πÄ‡∏•‡∏¢", color=discord.Color.orange()),
            ephemeral=True
        )
        return

    team_text = ""
    for i, (number, name, is_rip) in enumerate(team, start=1):
        emoji = "üî¥" if is_rip else "üü¢"
        team_text += f"{emoji} `{i}` ‚Ä¢ ``{number}`` : {name}\n"

    await interaction.response.send_message(
        embed=discord.Embed(
            title=f"{interaction.user.name}'s Team <:emoji_4:1361942448514797570>",
            description=team_text,
            color=discord.Color.purple()
        )
    )

@bot.tree.command(name="teamof", description="‡∏î‡∏π‡∏ó‡∏µ‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏∑‡πà‡∏ô (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)")
@app_commands.describe(user="‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏ó‡∏µ‡∏°")
async def teamof(interaction: discord.Interaction, user: discord.User):
    if not any(role.name == "Admin" for role in interaction.user.roles):
        await interaction.response.send_message(
            embed=discord.Embed(description="‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏î‡∏π‡∏ó‡∏µ‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô", color=discord.Color.red()),
            ephemeral=True
        )
        return

    user_id = str(user.id)
    team = bot.user_team.get(user_id, [])

    if not team:
        await interaction.response.send_message(
            embed=discord.Embed(description=f"{user.name} ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏ó‡∏µ‡∏°", color=discord.Color.orange()),
            ephemeral=True
        )
        return

    team_text = ""
    for i, (number, name, is_rip) in enumerate(team, start=1):
        emoji = "üî¥" if is_rip else "üü¢"
        team_text += f"{emoji} **{i}.** ‡πÄ‡∏•‡∏Ç: `{number}` ‡∏ä‡∏∑‡πà‡∏≠: **{name}**\n"

    await interaction.response.send_message(
        embed=discord.Embed(
            title=f"Team ‡∏Ç‡∏≠‡∏á {user.name}",
            description=team_text,
            color=discord.Color.purple()
        )
    )

@bot.tree.command(name="removeteam", description="‡∏•‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏ó‡∏µ‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)")
@app_commands.describe(user="‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö", index="‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏ó‡∏µ‡∏° (‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà 1)")
async def removeteam(interaction: discord.Interaction, user: discord.User, index: int):
    if not any(role.name == "Admin" for role in interaction.user.roles):
        await interaction.response.send_message(
            embed=discord.Embed(description="‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏•‡∏ö‡∏ó‡∏µ‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô", color=discord.Color.red()),
            ephemeral=True
        )
        return

    user_id = str(user.id)
    team = bot.user_team.get(user_id, [])

    if not team:
        await interaction.response.send_message(
            embed=discord.Embed(description=f"{user.name} ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏µ‡∏°", color=discord.Color.orange()),
            ephemeral=True
        )
        return

    if index < 1 or index > len(team):
        await interaction.response.send_message(
            embed=discord.Embed(description="‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á", color=discord.Color.orange()),
            ephemeral=True
        )
        return

    removed = team.pop(index - 1)
    await interaction.response.send_message(
        embed=discord.Embed(
            description=f"‡∏•‡∏ö‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡πà‡∏≠‡∏ô‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç `{removed[0]}` ‡∏ä‡∏∑‡πà‡∏≠ **{removed[1]}** ‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡∏°‡∏Ç‡∏≠‡∏á {user.name} ‡πÅ‡∏•‡πâ‡∏ß",
            color=discord.Color.green()
        )
    )
    save_data()

@bot.tree.command(name="rip", description="‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏•‡∏Ç‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏≤‡∏¢ (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô)")
@app_commands.describe(user="‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", index="‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏ó‡∏µ‡∏° (‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà 1)")
async def rip(interaction: discord.Interaction, user: discord.User, index: int):
    if not any(role.name == "Admin" for role in interaction.user.roles):
        await interaction.response.send_message(
            embed=discord.Embed(description="‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", color=discord.Color.red()),
            ephemeral=True
        )
        return

    user_id = str(user.id)
    team = bot.user_team.get(user_id, [])
    if not team:
        await interaction.response.send_message(
            embed=discord.Embed(description="‡∏ó‡∏µ‡∏°‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤", color=discord.Color.orange()),
            ephemeral=True
        )
        return

    if index < 1 or index > len(team):
        await interaction.response.send_message(
            embed=discord.Embed(description="‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á", color=discord.Color.orange()),
            ephemeral=True
        )
        return

    number, name, _ = team[index - 1]
    team[index - 1] = (number, name, True)

    await interaction.response.send_message(
        embed=discord.Embed(
            description=f"‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ üî¥ ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö `{number}` : **{name}** ‡πÉ‡∏ô‡∏ó‡∏µ‡∏°‡∏Ç‡∏≠‡∏á {user.mention}",
            color=discord.Color.red()
        )
    )
    save_data()

@bot.tree.command(name="revive", description="‡∏ä‡∏∏‡∏ö‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏ó‡∏µ‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° Revive")
@app_commands.describe(index="‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡∏ó‡∏µ‡∏° (‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏µ‡πà 1)")
async def revive(interaction: discord.Interaction, index: int):
    user = interaction.user
    user_id = str(user.id)
    team = bot.user_team.get(user_id, [])
    bag = bot.user_bag.get(user_id, {})

    if not team:
        await interaction.response.send_message(
            embed=discord.Embed(description="‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ó‡∏µ‡∏°", color=discord.Color.orange()),
            ephemeral=True
        )
        return

    if index < 1 or index > len(team):
        await interaction.response.send_message(
            embed=discord.Embed(description="‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á", color=discord.Color.orange()),
            ephemeral=True
        )
        return

    if bag.get("Revive", 0) < 1:
        await interaction.response.send_message(
            embed=discord.Embed(description="‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏≠‡πÄ‡∏ó‡πá‡∏° Revive!", color=discord.Color.red()),
            ephemeral=True
        )
        return

    bot.user_bag[user_id]["Revive"] -= 1

    number, name, _ = team[index - 1]
    team[index - 1] = (number, name, False)

    await interaction.response.send_message(
        embed=discord.Embed(
            description=f"‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡πà‡∏≠‡∏ô‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç `{number}` ‡∏ä‡∏∑‡πà‡∏≠ **{name}** ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ü‡∏∑‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß! (üü¢) (-1 Revive)",
            color=discord.Color.green()
        )
    )
    save_data()

@bot.tree.command(name="help", description="‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
async def help(interaction: discord.Interaction):
    embed = discord.Embed(
        title="‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î",
        description=(
            "- `/bag ‡∏î‡∏π‡∏Ç‡∏≠‡∏á‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤`\n"
            "- `/team ‡∏î‡∏π‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡πà‡∏≠‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡∏ó‡∏µ‡∏°`\n"
            "- `/unlock ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡πà‡∏≠‡∏ô‡∏î‡πâ‡∏ß‡∏¢ pokeball`\n"
            "- `/revive ‡∏ä‡∏∏‡∏ö‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÇ‡∏õ‡πÄ‡∏Å‡∏°‡πà‡∏≠‡∏ô‡∏î‡πâ‡∏ß‡∏¢ revive`"
        )
    )
    await interaction.response.send_message(embed=embed)

TOKEN = os.getenv('DISCORD_TOKEN')

server_on ()

bot.run(TOKEN)